/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var io_casperlabs_casper_consensus_consensus_pb = require('../../../../io/casperlabs/casper/consensus/consensus_pb.js');
goog.exportSymbol('proto.io.casperlabs.casper.consensus.info.BlockInfo', null, global);
goog.exportSymbol('proto.io.casperlabs.casper.consensus.info.BlockInfo.Status', null, global);
goog.exportSymbol('proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Finality', null, global);
goog.exportSymbol('proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats', null, global);
goog.exportSymbol('proto.io.casperlabs.casper.consensus.info.BlockInfo.View', null, global);
goog.exportSymbol('proto.io.casperlabs.casper.consensus.info.DeployInfo', null, global);
goog.exportSymbol('proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult', null, global);
goog.exportSymbol('proto.io.casperlabs.casper.consensus.info.DeployInfo.State', null, global);
goog.exportSymbol('proto.io.casperlabs.casper.consensus.info.DeployInfo.Status', null, global);
goog.exportSymbol('proto.io.casperlabs.casper.consensus.info.DeployInfo.View', null, global);
goog.exportSymbol('proto.io.casperlabs.casper.consensus.info.Event', null, global);
goog.exportSymbol('proto.io.casperlabs.casper.consensus.info.Event.BlockAdded', null, global);
goog.exportSymbol('proto.io.casperlabs.casper.consensus.info.Event.DeployAdded', null, global);
goog.exportSymbol('proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded', null, global);
goog.exportSymbol('proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized', null, global);
goog.exportSymbol('proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned', null, global);
goog.exportSymbol('proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed', null, global);
goog.exportSymbol('proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued', null, global);
goog.exportSymbol('proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.casperlabs.casper.consensus.info.BlockInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.io.casperlabs.casper.consensus.info.BlockInfo.displayName = 'proto.io.casperlabs.casper.consensus.info.BlockInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.io.casperlabs.casper.consensus.info.BlockInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.casperlabs.casper.consensus.info.BlockInfo} msg The msg instance to transform.
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    summary: (f = msg.getSummary()) && io_casperlabs_casper_consensus_consensus_pb.BlockSummary.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.casperlabs.casper.consensus.info.BlockInfo}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.casperlabs.casper.consensus.info.BlockInfo;
  return proto.io.casperlabs.casper.consensus.info.BlockInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.casperlabs.casper.consensus.info.BlockInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.casperlabs.casper.consensus.info.BlockInfo}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new io_casperlabs_casper_consensus_consensus_pb.BlockSummary;
      reader.readMessage(value,io_casperlabs_casper_consensus_consensus_pb.BlockSummary.deserializeBinaryFromReader);
      msg.setSummary(value);
      break;
    case 2:
      var value = new proto.io.casperlabs.casper.consensus.info.BlockInfo.Status;
      reader.readMessage(value,proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.io.casperlabs.casper.consensus.info.BlockInfo} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getSummary();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      io_casperlabs_casper_consensus_consensus_pb.BlockSummary.serializeBinaryToWriter
    );
  }
  f = this.getStatus();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.io.casperlabs.casper.consensus.info.BlockInfo} The clone.
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.prototype.cloneMessage = function() {
  return /** @type {!proto.io.casperlabs.casper.consensus.info.BlockInfo} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional io.casperlabs.casper.consensus.BlockSummary summary = 1;
 * @return {proto.io.casperlabs.casper.consensus.BlockSummary}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.prototype.getSummary = function() {
  return /** @type{proto.io.casperlabs.casper.consensus.BlockSummary} */ (
    jspb.Message.getWrapperField(this, io_casperlabs_casper_consensus_consensus_pb.BlockSummary, 1));
};


/** @param {proto.io.casperlabs.casper.consensus.BlockSummary|undefined} value  */
proto.io.casperlabs.casper.consensus.info.BlockInfo.prototype.setSummary = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.io.casperlabs.casper.consensus.info.BlockInfo.prototype.clearSummary = function() {
  this.setSummary(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.prototype.hasSummary = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Status status = 2;
 * @return {proto.io.casperlabs.casper.consensus.info.BlockInfo.Status}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.prototype.getStatus = function() {
  return /** @type{proto.io.casperlabs.casper.consensus.info.BlockInfo.Status} */ (
    jspb.Message.getWrapperField(this, proto.io.casperlabs.casper.consensus.info.BlockInfo.Status, 2));
};


/** @param {proto.io.casperlabs.casper.consensus.info.BlockInfo.Status|undefined} value  */
proto.io.casperlabs.casper.consensus.info.BlockInfo.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.io.casperlabs.casper.consensus.info.BlockInfo.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.View = {
  BASIC: 0,
  FULL: 1
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.repeatedFields_, null);
};
goog.inherits(proto.io.casperlabs.casper.consensus.info.BlockInfo.Status, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.displayName = 'proto.io.casperlabs.casper.consensus.info.BlockInfo.Status';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.prototype.toObject = function(opt_includeInstance) {
  return proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.casperlabs.casper.consensus.info.BlockInfo.Status} msg The msg instance to transform.
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.toObject = function(includeInstance, msg) {
  var f, obj = {
    stats: (f = msg.getStats()) && proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats.toObject(includeInstance, f),
    childHashesList: msg.getChildHashesList_asB64(),
    finality: msg.getFinality()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.casperlabs.casper.consensus.info.BlockInfo.Status}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.casperlabs.casper.consensus.info.BlockInfo.Status;
  return proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.casperlabs.casper.consensus.info.BlockInfo.Status} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.casperlabs.casper.consensus.info.BlockInfo.Status}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats;
      reader.readMessage(value,proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats.deserializeBinaryFromReader);
      msg.setStats(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.getChildHashesList().push(value);
      msg.setChildHashesList(msg.getChildHashesList());
      break;
    case 5:
      var value = /** @type {!proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Finality} */ (reader.readEnum());
      msg.setFinality(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.io.casperlabs.casper.consensus.info.BlockInfo.Status} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getStats();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats.serializeBinaryToWriter
    );
  }
  f = this.getChildHashesList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      3,
      f
    );
  }
  f = this.getFinality();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.io.casperlabs.casper.consensus.info.BlockInfo.Status} The clone.
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.prototype.cloneMessage = function() {
  return /** @type {!proto.io.casperlabs.casper.consensus.info.BlockInfo.Status} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Stats stats = 2;
 * @return {proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.prototype.getStats = function() {
  return /** @type{proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats} */ (
    jspb.Message.getWrapperField(this, proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats, 2));
};


/** @param {proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats|undefined} value  */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.prototype.setStats = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.prototype.clearStats = function() {
  this.setStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.prototype.hasStats = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated bytes child_hashes = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.prototype.getChildHashesList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getField(this, 3));
};


/**
 * repeated bytes child_hashes = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * This is a type-conversion wrapper around `getChildHashesList()`
 * @return {!Array.<string>}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.prototype.getChildHashesList_asB64 = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.bytesListAsB64(
      this.getChildHashesList()));
};


/**
 * repeated bytes child_hashes = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChildHashesList()`
 * @return {!Array.<!Uint8Array>}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.prototype.getChildHashesList_asU8 = function() {
  return /** @type {!Array.<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getChildHashesList()));
};


/** @param {!(Array<!Uint8Array>|Array<string>)} value  */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.prototype.setChildHashesList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.prototype.clearChildHashesList = function() {
  jspb.Message.setField(this, 3, []);
};


/**
 * optional Finality finality = 5;
 * @return {!proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Finality}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.prototype.getFinality = function() {
  return /** @type {!proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Finality} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {!proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Finality} value  */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.prototype.setFinality = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * @enum {number}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Finality = {
  UNDECIDED: 0,
  FINALIZED: 1,
  ORPHANED: 2
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats.displayName = 'proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats.prototype.toObject = function(opt_includeInstance) {
  return proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats} msg The msg instance to transform.
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockSizeBytes: msg.getBlockSizeBytes(),
    deployErrorCount: msg.getDeployErrorCount(),
    deployCostTotal: msg.getDeployCostTotal(),
    deployGasPriceAvg: msg.getDeployGasPriceAvg()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats;
  return proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockSizeBytes(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDeployErrorCount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDeployCostTotal(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDeployGasPriceAvg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getBlockSizeBytes();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = this.getDeployErrorCount();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = this.getDeployCostTotal();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = this.getDeployGasPriceAvg();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats} The clone.
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats.prototype.cloneMessage = function() {
  return /** @type {!proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional uint32 block_size_bytes = 1;
 * @return {number}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats.prototype.getBlockSizeBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats.prototype.setBlockSizeBytes = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint32 deploy_error_count = 2;
 * @return {number}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats.prototype.getDeployErrorCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats.prototype.setDeployErrorCount = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional uint64 deploy_cost_total = 3;
 * @return {number}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats.prototype.getDeployCostTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats.prototype.setDeployCostTotal = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional uint64 deploy_gas_price_avg = 4;
 * @return {number}
 */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats.prototype.getDeployGasPriceAvg = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.io.casperlabs.casper.consensus.info.BlockInfo.Status.Stats.prototype.setDeployGasPriceAvg = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.casperlabs.casper.consensus.info.DeployInfo.repeatedFields_, null);
};
goog.inherits(proto.io.casperlabs.casper.consensus.info.DeployInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.io.casperlabs.casper.consensus.info.DeployInfo.displayName = 'proto.io.casperlabs.casper.consensus.info.DeployInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.io.casperlabs.casper.consensus.info.DeployInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.casperlabs.casper.consensus.info.DeployInfo} msg The msg instance to transform.
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    deploy: (f = msg.getDeploy()) && io_casperlabs_casper_consensus_consensus_pb.Deploy.toObject(includeInstance, f),
    processingResultsList: jspb.Message.toObjectList(msg.getProcessingResultsList(),
    proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult.toObject, includeInstance),
    status: (f = msg.getStatus()) && proto.io.casperlabs.casper.consensus.info.DeployInfo.Status.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.casperlabs.casper.consensus.info.DeployInfo}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.casperlabs.casper.consensus.info.DeployInfo;
  return proto.io.casperlabs.casper.consensus.info.DeployInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.casperlabs.casper.consensus.info.DeployInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.casperlabs.casper.consensus.info.DeployInfo}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new io_casperlabs_casper_consensus_consensus_pb.Deploy;
      reader.readMessage(value,io_casperlabs_casper_consensus_consensus_pb.Deploy.deserializeBinaryFromReader);
      msg.setDeploy(value);
      break;
    case 2:
      var value = new proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult;
      reader.readMessage(value,proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult.deserializeBinaryFromReader);
      msg.getProcessingResultsList().push(value);
      msg.setProcessingResultsList(msg.getProcessingResultsList());
      break;
    case 3:
      var value = new proto.io.casperlabs.casper.consensus.info.DeployInfo.Status;
      reader.readMessage(value,proto.io.casperlabs.casper.consensus.info.DeployInfo.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.io.casperlabs.casper.consensus.info.DeployInfo} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getDeploy();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      io_casperlabs_casper_consensus_consensus_pb.Deploy.serializeBinaryToWriter
    );
  }
  f = this.getProcessingResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult.serializeBinaryToWriter
    );
  }
  f = this.getStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.casperlabs.casper.consensus.info.DeployInfo.Status.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.io.casperlabs.casper.consensus.info.DeployInfo} The clone.
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.prototype.cloneMessage = function() {
  return /** @type {!proto.io.casperlabs.casper.consensus.info.DeployInfo} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional io.casperlabs.casper.consensus.Deploy deploy = 1;
 * @return {proto.io.casperlabs.casper.consensus.Deploy}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.prototype.getDeploy = function() {
  return /** @type{proto.io.casperlabs.casper.consensus.Deploy} */ (
    jspb.Message.getWrapperField(this, io_casperlabs_casper_consensus_consensus_pb.Deploy, 1));
};


/** @param {proto.io.casperlabs.casper.consensus.Deploy|undefined} value  */
proto.io.casperlabs.casper.consensus.info.DeployInfo.prototype.setDeploy = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.io.casperlabs.casper.consensus.info.DeployInfo.prototype.clearDeploy = function() {
  this.setDeploy(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.prototype.hasDeploy = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ProcessingResult processing_results = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult>}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.prototype.getProcessingResultsList = function() {
  return /** @type{!Array.<!proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult, 2));
};


/** @param {Array.<!proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult>} value  */
proto.io.casperlabs.casper.consensus.info.DeployInfo.prototype.setProcessingResultsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


proto.io.casperlabs.casper.consensus.info.DeployInfo.prototype.clearProcessingResultsList = function() {
  this.setProcessingResultsList([]);
};


/**
 * optional Status status = 3;
 * @return {proto.io.casperlabs.casper.consensus.info.DeployInfo.Status}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.prototype.getStatus = function() {
  return /** @type{proto.io.casperlabs.casper.consensus.info.DeployInfo.Status} */ (
    jspb.Message.getWrapperField(this, proto.io.casperlabs.casper.consensus.info.DeployInfo.Status, 3));
};


/** @param {proto.io.casperlabs.casper.consensus.info.DeployInfo.Status|undefined} value  */
proto.io.casperlabs.casper.consensus.info.DeployInfo.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.io.casperlabs.casper.consensus.info.DeployInfo.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.View = {
  BASIC: 0,
  FULL: 1
};

/**
 * @enum {number}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.State = {
  UNDEFINED: 0,
  PENDING: 1,
  PROCESSED: 2,
  FINALIZED: 3,
  DISCARDED: 4
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult.displayName = 'proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult.prototype.toObject = function(opt_includeInstance) {
  return proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult} msg The msg instance to transform.
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockInfo: (f = msg.getBlockInfo()) && proto.io.casperlabs.casper.consensus.info.BlockInfo.toObject(includeInstance, f),
    cost: msg.getCost(),
    isError: msg.getIsError(),
    errorMessage: msg.getErrorMessage(),
    stage: msg.getStage()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult;
  return proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.casperlabs.casper.consensus.info.BlockInfo;
      reader.readMessage(value,proto.io.casperlabs.casper.consensus.info.BlockInfo.deserializeBinaryFromReader);
      msg.setBlockInfo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCost(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsError(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorMessage(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getBlockInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.casperlabs.casper.consensus.info.BlockInfo.serializeBinaryToWriter
    );
  }
  f = this.getCost();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = this.getIsError();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = this.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getStage();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult} The clone.
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult.prototype.cloneMessage = function() {
  return /** @type {!proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional BlockInfo block_info = 1;
 * @return {proto.io.casperlabs.casper.consensus.info.BlockInfo}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult.prototype.getBlockInfo = function() {
  return /** @type{proto.io.casperlabs.casper.consensus.info.BlockInfo} */ (
    jspb.Message.getWrapperField(this, proto.io.casperlabs.casper.consensus.info.BlockInfo, 1));
};


/** @param {proto.io.casperlabs.casper.consensus.info.BlockInfo|undefined} value  */
proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult.prototype.setBlockInfo = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult.prototype.clearBlockInfo = function() {
  this.setBlockInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult.prototype.hasBlockInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 cost = 2;
 * @return {number}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult.prototype.getCost = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult.prototype.setCost = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional bool is_error = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult.prototype.getIsError = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 3, false));
};


/** @param {boolean} value  */
proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult.prototype.setIsError = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string error_message = 4;
 * @return {string}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult.prototype.getErrorMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult.prototype.setErrorMessage = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional uint32 stage = 5;
 * @return {number}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult.prototype.getStage = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.io.casperlabs.casper.consensus.info.DeployInfo.ProcessingResult.prototype.setStage = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.Status = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.casperlabs.casper.consensus.info.DeployInfo.Status, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.io.casperlabs.casper.consensus.info.DeployInfo.Status.displayName = 'proto.io.casperlabs.casper.consensus.info.DeployInfo.Status';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.Status.prototype.toObject = function(opt_includeInstance) {
  return proto.io.casperlabs.casper.consensus.info.DeployInfo.Status.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.casperlabs.casper.consensus.info.DeployInfo.Status} msg The msg instance to transform.
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.Status.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: msg.getState(),
    message: msg.getMessage()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.casperlabs.casper.consensus.info.DeployInfo.Status}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.Status.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.casperlabs.casper.consensus.info.DeployInfo.Status;
  return proto.io.casperlabs.casper.consensus.info.DeployInfo.Status.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.casperlabs.casper.consensus.info.DeployInfo.Status} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.casperlabs.casper.consensus.info.DeployInfo.Status}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.Status.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.io.casperlabs.casper.consensus.info.DeployInfo.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.io.casperlabs.casper.consensus.info.DeployInfo.Status} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.Status.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.Status.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.Status.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = this.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.io.casperlabs.casper.consensus.info.DeployInfo.Status} The clone.
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.Status.prototype.cloneMessage = function() {
  return /** @type {!proto.io.casperlabs.casper.consensus.info.DeployInfo.Status} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional State state = 1;
 * @return {!proto.io.casperlabs.casper.consensus.info.DeployInfo.State}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.Status.prototype.getState = function() {
  return /** @type {!proto.io.casperlabs.casper.consensus.info.DeployInfo.State} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.io.casperlabs.casper.consensus.info.DeployInfo.State} value  */
proto.io.casperlabs.casper.consensus.info.DeployInfo.Status.prototype.setState = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.io.casperlabs.casper.consensus.info.DeployInfo.Status.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.io.casperlabs.casper.consensus.info.DeployInfo.Status.prototype.setMessage = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.casperlabs.casper.consensus.info.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.io.casperlabs.casper.consensus.info.Event.oneofGroups_);
};
goog.inherits(proto.io.casperlabs.casper.consensus.info.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.io.casperlabs.casper.consensus.info.Event.displayName = 'proto.io.casperlabs.casper.consensus.info.Event';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.io.casperlabs.casper.consensus.info.Event.oneofGroups_ = [[1,2,3,4,5,6,7,8]];

/**
 * @enum {number}
 */
proto.io.casperlabs.casper.consensus.info.Event.ValueCase = {
  VALUE_NOT_SET: 0,
  BLOCK_ADDED: 1,
  NEW_FINALIZED_BLOCK: 2,
  DEPLOY_ADDED: 3,
  DEPLOY_REQUEUED: 4,
  DEPLOY_DISCARDED: 5,
  DEPLOY_PROCESSED: 6,
  DEPLOY_FINALIZED: 7,
  DEPLOY_ORPHANED: 8
};

/**
 * @return {proto.io.casperlabs.casper.consensus.info.Event.ValueCase}
 */
proto.io.casperlabs.casper.consensus.info.Event.prototype.getValueCase = function() {
  return /** @type {proto.io.casperlabs.casper.consensus.info.Event.ValueCase} */(jspb.Message.computeOneofCase(this, proto.io.casperlabs.casper.consensus.info.Event.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.io.casperlabs.casper.consensus.info.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.casperlabs.casper.consensus.info.Event} msg The msg instance to transform.
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventId: msg.getEventId(),
    blockAdded: (f = msg.getBlockAdded()) && proto.io.casperlabs.casper.consensus.info.Event.BlockAdded.toObject(includeInstance, f),
    newFinalizedBlock: (f = msg.getNewFinalizedBlock()) && proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.toObject(includeInstance, f),
    deployAdded: (f = msg.getDeployAdded()) && proto.io.casperlabs.casper.consensus.info.Event.DeployAdded.toObject(includeInstance, f),
    deployRequeued: (f = msg.getDeployRequeued()) && proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued.toObject(includeInstance, f),
    deployDiscarded: (f = msg.getDeployDiscarded()) && proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded.toObject(includeInstance, f),
    deployProcessed: (f = msg.getDeployProcessed()) && proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed.toObject(includeInstance, f),
    deployFinalized: (f = msg.getDeployFinalized()) && proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized.toObject(includeInstance, f),
    deployOrphaned: (f = msg.getDeployOrphaned()) && proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.casperlabs.casper.consensus.info.Event}
 */
proto.io.casperlabs.casper.consensus.info.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.casperlabs.casper.consensus.info.Event;
  return proto.io.casperlabs.casper.consensus.info.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.casperlabs.casper.consensus.info.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.casperlabs.casper.consensus.info.Event}
 */
proto.io.casperlabs.casper.consensus.info.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventId(value);
      break;
    case 1:
      var value = new proto.io.casperlabs.casper.consensus.info.Event.BlockAdded;
      reader.readMessage(value,proto.io.casperlabs.casper.consensus.info.Event.BlockAdded.deserializeBinaryFromReader);
      msg.setBlockAdded(value);
      break;
    case 2:
      var value = new proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock;
      reader.readMessage(value,proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.deserializeBinaryFromReader);
      msg.setNewFinalizedBlock(value);
      break;
    case 3:
      var value = new proto.io.casperlabs.casper.consensus.info.Event.DeployAdded;
      reader.readMessage(value,proto.io.casperlabs.casper.consensus.info.Event.DeployAdded.deserializeBinaryFromReader);
      msg.setDeployAdded(value);
      break;
    case 4:
      var value = new proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued;
      reader.readMessage(value,proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued.deserializeBinaryFromReader);
      msg.setDeployRequeued(value);
      break;
    case 5:
      var value = new proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded;
      reader.readMessage(value,proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded.deserializeBinaryFromReader);
      msg.setDeployDiscarded(value);
      break;
    case 6:
      var value = new proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed;
      reader.readMessage(value,proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed.deserializeBinaryFromReader);
      msg.setDeployProcessed(value);
      break;
    case 7:
      var value = new proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized;
      reader.readMessage(value,proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized.deserializeBinaryFromReader);
      msg.setDeployFinalized(value);
      break;
    case 8:
      var value = new proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned;
      reader.readMessage(value,proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned.deserializeBinaryFromReader);
      msg.setDeployOrphaned(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.io.casperlabs.casper.consensus.info.Event} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.Event.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.casperlabs.casper.consensus.info.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.Event.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getEventId();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = this.getBlockAdded();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.casperlabs.casper.consensus.info.Event.BlockAdded.serializeBinaryToWriter
    );
  }
  f = this.getNewFinalizedBlock();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.serializeBinaryToWriter
    );
  }
  f = this.getDeployAdded();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.casperlabs.casper.consensus.info.Event.DeployAdded.serializeBinaryToWriter
    );
  }
  f = this.getDeployRequeued();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued.serializeBinaryToWriter
    );
  }
  f = this.getDeployDiscarded();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded.serializeBinaryToWriter
    );
  }
  f = this.getDeployProcessed();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed.serializeBinaryToWriter
    );
  }
  f = this.getDeployFinalized();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized.serializeBinaryToWriter
    );
  }
  f = this.getDeployOrphaned();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.io.casperlabs.casper.consensus.info.Event} The clone.
 */
proto.io.casperlabs.casper.consensus.info.Event.prototype.cloneMessage = function() {
  return /** @type {!proto.io.casperlabs.casper.consensus.info.Event} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional uint64 event_id = 9;
 * @return {number}
 */
proto.io.casperlabs.casper.consensus.info.Event.prototype.getEventId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 9, 0));
};


/** @param {number} value  */
proto.io.casperlabs.casper.consensus.info.Event.prototype.setEventId = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional BlockAdded block_added = 1;
 * @return {proto.io.casperlabs.casper.consensus.info.Event.BlockAdded}
 */
proto.io.casperlabs.casper.consensus.info.Event.prototype.getBlockAdded = function() {
  return /** @type{proto.io.casperlabs.casper.consensus.info.Event.BlockAdded} */ (
    jspb.Message.getWrapperField(this, proto.io.casperlabs.casper.consensus.info.Event.BlockAdded, 1));
};


/** @param {proto.io.casperlabs.casper.consensus.info.Event.BlockAdded|undefined} value  */
proto.io.casperlabs.casper.consensus.info.Event.prototype.setBlockAdded = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.io.casperlabs.casper.consensus.info.Event.oneofGroups_[0], value);
};


proto.io.casperlabs.casper.consensus.info.Event.prototype.clearBlockAdded = function() {
  this.setBlockAdded(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.io.casperlabs.casper.consensus.info.Event.prototype.hasBlockAdded = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional NewFinalizedBlock new_finalized_block = 2;
 * @return {proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock}
 */
proto.io.casperlabs.casper.consensus.info.Event.prototype.getNewFinalizedBlock = function() {
  return /** @type{proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock} */ (
    jspb.Message.getWrapperField(this, proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock, 2));
};


/** @param {proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock|undefined} value  */
proto.io.casperlabs.casper.consensus.info.Event.prototype.setNewFinalizedBlock = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.io.casperlabs.casper.consensus.info.Event.oneofGroups_[0], value);
};


proto.io.casperlabs.casper.consensus.info.Event.prototype.clearNewFinalizedBlock = function() {
  this.setNewFinalizedBlock(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.io.casperlabs.casper.consensus.info.Event.prototype.hasNewFinalizedBlock = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DeployAdded deploy_added = 3;
 * @return {proto.io.casperlabs.casper.consensus.info.Event.DeployAdded}
 */
proto.io.casperlabs.casper.consensus.info.Event.prototype.getDeployAdded = function() {
  return /** @type{proto.io.casperlabs.casper.consensus.info.Event.DeployAdded} */ (
    jspb.Message.getWrapperField(this, proto.io.casperlabs.casper.consensus.info.Event.DeployAdded, 3));
};


/** @param {proto.io.casperlabs.casper.consensus.info.Event.DeployAdded|undefined} value  */
proto.io.casperlabs.casper.consensus.info.Event.prototype.setDeployAdded = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.io.casperlabs.casper.consensus.info.Event.oneofGroups_[0], value);
};


proto.io.casperlabs.casper.consensus.info.Event.prototype.clearDeployAdded = function() {
  this.setDeployAdded(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.io.casperlabs.casper.consensus.info.Event.prototype.hasDeployAdded = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DeployRequeued deploy_requeued = 4;
 * @return {proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued}
 */
proto.io.casperlabs.casper.consensus.info.Event.prototype.getDeployRequeued = function() {
  return /** @type{proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued} */ (
    jspb.Message.getWrapperField(this, proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued, 4));
};


/** @param {proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued|undefined} value  */
proto.io.casperlabs.casper.consensus.info.Event.prototype.setDeployRequeued = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.io.casperlabs.casper.consensus.info.Event.oneofGroups_[0], value);
};


proto.io.casperlabs.casper.consensus.info.Event.prototype.clearDeployRequeued = function() {
  this.setDeployRequeued(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.io.casperlabs.casper.consensus.info.Event.prototype.hasDeployRequeued = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional DeployDiscarded deploy_discarded = 5;
 * @return {proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded}
 */
proto.io.casperlabs.casper.consensus.info.Event.prototype.getDeployDiscarded = function() {
  return /** @type{proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded} */ (
    jspb.Message.getWrapperField(this, proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded, 5));
};


/** @param {proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded|undefined} value  */
proto.io.casperlabs.casper.consensus.info.Event.prototype.setDeployDiscarded = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.io.casperlabs.casper.consensus.info.Event.oneofGroups_[0], value);
};


proto.io.casperlabs.casper.consensus.info.Event.prototype.clearDeployDiscarded = function() {
  this.setDeployDiscarded(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.io.casperlabs.casper.consensus.info.Event.prototype.hasDeployDiscarded = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional DeployProcessed deploy_processed = 6;
 * @return {proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed}
 */
proto.io.casperlabs.casper.consensus.info.Event.prototype.getDeployProcessed = function() {
  return /** @type{proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed} */ (
    jspb.Message.getWrapperField(this, proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed, 6));
};


/** @param {proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed|undefined} value  */
proto.io.casperlabs.casper.consensus.info.Event.prototype.setDeployProcessed = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.io.casperlabs.casper.consensus.info.Event.oneofGroups_[0], value);
};


proto.io.casperlabs.casper.consensus.info.Event.prototype.clearDeployProcessed = function() {
  this.setDeployProcessed(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.io.casperlabs.casper.consensus.info.Event.prototype.hasDeployProcessed = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional DeployFinalized deploy_finalized = 7;
 * @return {proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized}
 */
proto.io.casperlabs.casper.consensus.info.Event.prototype.getDeployFinalized = function() {
  return /** @type{proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized} */ (
    jspb.Message.getWrapperField(this, proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized, 7));
};


/** @param {proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized|undefined} value  */
proto.io.casperlabs.casper.consensus.info.Event.prototype.setDeployFinalized = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.io.casperlabs.casper.consensus.info.Event.oneofGroups_[0], value);
};


proto.io.casperlabs.casper.consensus.info.Event.prototype.clearDeployFinalized = function() {
  this.setDeployFinalized(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.io.casperlabs.casper.consensus.info.Event.prototype.hasDeployFinalized = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional DeployOrphaned deploy_orphaned = 8;
 * @return {proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned}
 */
proto.io.casperlabs.casper.consensus.info.Event.prototype.getDeployOrphaned = function() {
  return /** @type{proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned} */ (
    jspb.Message.getWrapperField(this, proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned, 8));
};


/** @param {proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned|undefined} value  */
proto.io.casperlabs.casper.consensus.info.Event.prototype.setDeployOrphaned = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.io.casperlabs.casper.consensus.info.Event.oneofGroups_[0], value);
};


proto.io.casperlabs.casper.consensus.info.Event.prototype.clearDeployOrphaned = function() {
  this.setDeployOrphaned(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.io.casperlabs.casper.consensus.info.Event.prototype.hasDeployOrphaned = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.casperlabs.casper.consensus.info.Event.BlockAdded = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.casperlabs.casper.consensus.info.Event.BlockAdded, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.io.casperlabs.casper.consensus.info.Event.BlockAdded.displayName = 'proto.io.casperlabs.casper.consensus.info.Event.BlockAdded';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.Event.BlockAdded.prototype.toObject = function(opt_includeInstance) {
  return proto.io.casperlabs.casper.consensus.info.Event.BlockAdded.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.casperlabs.casper.consensus.info.Event.BlockAdded} msg The msg instance to transform.
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.Event.BlockAdded.toObject = function(includeInstance, msg) {
  var f, obj = {
    block: (f = msg.getBlock()) && proto.io.casperlabs.casper.consensus.info.BlockInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.casperlabs.casper.consensus.info.Event.BlockAdded}
 */
proto.io.casperlabs.casper.consensus.info.Event.BlockAdded.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.casperlabs.casper.consensus.info.Event.BlockAdded;
  return proto.io.casperlabs.casper.consensus.info.Event.BlockAdded.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.casperlabs.casper.consensus.info.Event.BlockAdded} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.casperlabs.casper.consensus.info.Event.BlockAdded}
 */
proto.io.casperlabs.casper.consensus.info.Event.BlockAdded.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.casperlabs.casper.consensus.info.BlockInfo;
      reader.readMessage(value,proto.io.casperlabs.casper.consensus.info.BlockInfo.deserializeBinaryFromReader);
      msg.setBlock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.io.casperlabs.casper.consensus.info.Event.BlockAdded} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.Event.BlockAdded.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.casperlabs.casper.consensus.info.Event.BlockAdded.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.Event.BlockAdded.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getBlock();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.casperlabs.casper.consensus.info.BlockInfo.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.io.casperlabs.casper.consensus.info.Event.BlockAdded} The clone.
 */
proto.io.casperlabs.casper.consensus.info.Event.BlockAdded.prototype.cloneMessage = function() {
  return /** @type {!proto.io.casperlabs.casper.consensus.info.Event.BlockAdded} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional BlockInfo block = 1;
 * @return {proto.io.casperlabs.casper.consensus.info.BlockInfo}
 */
proto.io.casperlabs.casper.consensus.info.Event.BlockAdded.prototype.getBlock = function() {
  return /** @type{proto.io.casperlabs.casper.consensus.info.BlockInfo} */ (
    jspb.Message.getWrapperField(this, proto.io.casperlabs.casper.consensus.info.BlockInfo, 1));
};


/** @param {proto.io.casperlabs.casper.consensus.info.BlockInfo|undefined} value  */
proto.io.casperlabs.casper.consensus.info.Event.BlockAdded.prototype.setBlock = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.io.casperlabs.casper.consensus.info.Event.BlockAdded.prototype.clearBlock = function() {
  this.setBlock(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.io.casperlabs.casper.consensus.info.Event.BlockAdded.prototype.hasBlock = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.repeatedFields_, null);
};
goog.inherits(proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.displayName = 'proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.prototype.toObject = function(opt_includeInstance) {
  return proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock} msg The msg instance to transform.
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockHash: msg.getBlockHash_asB64(),
    indirectlyFinalizedBlockHashesList: msg.getIndirectlyFinalizedBlockHashesList_asB64(),
    indirectlyOrphanedBlockHashesList: msg.getIndirectlyOrphanedBlockHashesList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock}
 */
proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock;
  return proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock}
 */
proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBlockHash(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.getIndirectlyFinalizedBlockHashesList().push(value);
      msg.setIndirectlyFinalizedBlockHashesList(msg.getIndirectlyFinalizedBlockHashesList());
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.getIndirectlyOrphanedBlockHashesList().push(value);
      msg.setIndirectlyOrphanedBlockHashesList(msg.getIndirectlyOrphanedBlockHashesList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getBlockHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = this.getIndirectlyFinalizedBlockHashesList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      2,
      f
    );
  }
  f = this.getIndirectlyOrphanedBlockHashesList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      3,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock} The clone.
 */
proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.prototype.cloneMessage = function() {
  return /** @type {!proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional bytes block_hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.prototype.getBlockHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/**
 * optional bytes block_hash = 1;
 * This is a type-conversion wrapper around `getBlockHash()`
 * @return {string}
 */
proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.prototype.getBlockHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBlockHash()));
};


/**
 * optional bytes block_hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBlockHash()`
 * @return {!Uint8Array}
 */
proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.prototype.getBlockHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBlockHash()));
};


/** @param {!(string|Uint8Array)} value  */
proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.prototype.setBlockHash = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated bytes indirectly_finalized_block_hashes = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.prototype.getIndirectlyFinalizedBlockHashesList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getField(this, 2));
};


/**
 * repeated bytes indirectly_finalized_block_hashes = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * This is a type-conversion wrapper around `getIndirectlyFinalizedBlockHashesList()`
 * @return {!Array.<string>}
 */
proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.prototype.getIndirectlyFinalizedBlockHashesList_asB64 = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.bytesListAsB64(
      this.getIndirectlyFinalizedBlockHashesList()));
};


/**
 * repeated bytes indirectly_finalized_block_hashes = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getIndirectlyFinalizedBlockHashesList()`
 * @return {!Array.<!Uint8Array>}
 */
proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.prototype.getIndirectlyFinalizedBlockHashesList_asU8 = function() {
  return /** @type {!Array.<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getIndirectlyFinalizedBlockHashesList()));
};


/** @param {!(Array<!Uint8Array>|Array<string>)} value  */
proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.prototype.setIndirectlyFinalizedBlockHashesList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.prototype.clearIndirectlyFinalizedBlockHashesList = function() {
  jspb.Message.setField(this, 2, []);
};


/**
 * repeated bytes indirectly_orphaned_block_hashes = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.prototype.getIndirectlyOrphanedBlockHashesList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getField(this, 3));
};


/**
 * repeated bytes indirectly_orphaned_block_hashes = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * This is a type-conversion wrapper around `getIndirectlyOrphanedBlockHashesList()`
 * @return {!Array.<string>}
 */
proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.prototype.getIndirectlyOrphanedBlockHashesList_asB64 = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.bytesListAsB64(
      this.getIndirectlyOrphanedBlockHashesList()));
};


/**
 * repeated bytes indirectly_orphaned_block_hashes = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getIndirectlyOrphanedBlockHashesList()`
 * @return {!Array.<!Uint8Array>}
 */
proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.prototype.getIndirectlyOrphanedBlockHashesList_asU8 = function() {
  return /** @type {!Array.<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getIndirectlyOrphanedBlockHashesList()));
};


/** @param {!(Array<!Uint8Array>|Array<string>)} value  */
proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.prototype.setIndirectlyOrphanedBlockHashesList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


proto.io.casperlabs.casper.consensus.info.Event.NewFinalizedBlock.prototype.clearIndirectlyOrphanedBlockHashesList = function() {
  jspb.Message.setField(this, 3, []);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployAdded = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.casperlabs.casper.consensus.info.Event.DeployAdded, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.io.casperlabs.casper.consensus.info.Event.DeployAdded.displayName = 'proto.io.casperlabs.casper.consensus.info.Event.DeployAdded';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployAdded.prototype.toObject = function(opt_includeInstance) {
  return proto.io.casperlabs.casper.consensus.info.Event.DeployAdded.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.casperlabs.casper.consensus.info.Event.DeployAdded} msg The msg instance to transform.
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployAdded.toObject = function(includeInstance, msg) {
  var f, obj = {
    deploy: (f = msg.getDeploy()) && io_casperlabs_casper_consensus_consensus_pb.Deploy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.casperlabs.casper.consensus.info.Event.DeployAdded}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployAdded.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.casperlabs.casper.consensus.info.Event.DeployAdded;
  return proto.io.casperlabs.casper.consensus.info.Event.DeployAdded.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.casperlabs.casper.consensus.info.Event.DeployAdded} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.casperlabs.casper.consensus.info.Event.DeployAdded}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployAdded.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new io_casperlabs_casper_consensus_consensus_pb.Deploy;
      reader.readMessage(value,io_casperlabs_casper_consensus_consensus_pb.Deploy.deserializeBinaryFromReader);
      msg.setDeploy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.io.casperlabs.casper.consensus.info.Event.DeployAdded} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployAdded.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployAdded.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployAdded.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getDeploy();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      io_casperlabs_casper_consensus_consensus_pb.Deploy.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.io.casperlabs.casper.consensus.info.Event.DeployAdded} The clone.
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployAdded.prototype.cloneMessage = function() {
  return /** @type {!proto.io.casperlabs.casper.consensus.info.Event.DeployAdded} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional io.casperlabs.casper.consensus.Deploy deploy = 1;
 * @return {proto.io.casperlabs.casper.consensus.Deploy}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployAdded.prototype.getDeploy = function() {
  return /** @type{proto.io.casperlabs.casper.consensus.Deploy} */ (
    jspb.Message.getWrapperField(this, io_casperlabs_casper_consensus_consensus_pb.Deploy, 1));
};


/** @param {proto.io.casperlabs.casper.consensus.Deploy|undefined} value  */
proto.io.casperlabs.casper.consensus.info.Event.DeployAdded.prototype.setDeploy = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.io.casperlabs.casper.consensus.info.Event.DeployAdded.prototype.clearDeploy = function() {
  this.setDeploy(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployAdded.prototype.hasDeploy = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded.displayName = 'proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded.prototype.toObject = function(opt_includeInstance) {
  return proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded} msg The msg instance to transform.
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded.toObject = function(includeInstance, msg) {
  var f, obj = {
    deploy: (f = msg.getDeploy()) && io_casperlabs_casper_consensus_consensus_pb.Deploy.toObject(includeInstance, f),
    message: msg.getMessage()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded;
  return proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new io_casperlabs_casper_consensus_consensus_pb.Deploy;
      reader.readMessage(value,io_casperlabs_casper_consensus_consensus_pb.Deploy.deserializeBinaryFromReader);
      msg.setDeploy(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getDeploy();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      io_casperlabs_casper_consensus_consensus_pb.Deploy.serializeBinaryToWriter
    );
  }
  f = this.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded} The clone.
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded.prototype.cloneMessage = function() {
  return /** @type {!proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional io.casperlabs.casper.consensus.Deploy deploy = 1;
 * @return {proto.io.casperlabs.casper.consensus.Deploy}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded.prototype.getDeploy = function() {
  return /** @type{proto.io.casperlabs.casper.consensus.Deploy} */ (
    jspb.Message.getWrapperField(this, io_casperlabs_casper_consensus_consensus_pb.Deploy, 1));
};


/** @param {proto.io.casperlabs.casper.consensus.Deploy|undefined} value  */
proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded.prototype.setDeploy = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded.prototype.clearDeploy = function() {
  this.setDeploy(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded.prototype.hasDeploy = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.io.casperlabs.casper.consensus.info.Event.DeployDiscarded.prototype.setMessage = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued.displayName = 'proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued.prototype.toObject = function(opt_includeInstance) {
  return proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued} msg The msg instance to transform.
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued.toObject = function(includeInstance, msg) {
  var f, obj = {
    deploy: (f = msg.getDeploy()) && io_casperlabs_casper_consensus_consensus_pb.Deploy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued;
  return proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new io_casperlabs_casper_consensus_consensus_pb.Deploy;
      reader.readMessage(value,io_casperlabs_casper_consensus_consensus_pb.Deploy.deserializeBinaryFromReader);
      msg.setDeploy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getDeploy();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      io_casperlabs_casper_consensus_consensus_pb.Deploy.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued} The clone.
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued.prototype.cloneMessage = function() {
  return /** @type {!proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional io.casperlabs.casper.consensus.Deploy deploy = 1;
 * @return {proto.io.casperlabs.casper.consensus.Deploy}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued.prototype.getDeploy = function() {
  return /** @type{proto.io.casperlabs.casper.consensus.Deploy} */ (
    jspb.Message.getWrapperField(this, io_casperlabs_casper_consensus_consensus_pb.Deploy, 1));
};


/** @param {proto.io.casperlabs.casper.consensus.Deploy|undefined} value  */
proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued.prototype.setDeploy = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued.prototype.clearDeploy = function() {
  this.setDeploy(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployRequeued.prototype.hasDeploy = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed.displayName = 'proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed.prototype.toObject = function(opt_includeInstance) {
  return proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed} msg The msg instance to transform.
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockHash: msg.getBlockHash_asB64(),
    processedDeploy: (f = msg.getProcessedDeploy()) && io_casperlabs_casper_consensus_consensus_pb.ProcessedDeploy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed;
  return proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBlockHash(value);
      break;
    case 2:
      var value = new io_casperlabs_casper_consensus_consensus_pb.ProcessedDeploy;
      reader.readMessage(value,io_casperlabs_casper_consensus_consensus_pb.ProcessedDeploy.deserializeBinaryFromReader);
      msg.setProcessedDeploy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getBlockHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = this.getProcessedDeploy();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      io_casperlabs_casper_consensus_consensus_pb.ProcessedDeploy.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed} The clone.
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed.prototype.cloneMessage = function() {
  return /** @type {!proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional bytes block_hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed.prototype.getBlockHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/**
 * optional bytes block_hash = 1;
 * This is a type-conversion wrapper around `getBlockHash()`
 * @return {string}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed.prototype.getBlockHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBlockHash()));
};


/**
 * optional bytes block_hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBlockHash()`
 * @return {!Uint8Array}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed.prototype.getBlockHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBlockHash()));
};


/** @param {!(string|Uint8Array)} value  */
proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed.prototype.setBlockHash = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional io.casperlabs.casper.consensus.Block.ProcessedDeploy processed_deploy = 2;
 * @return {proto.io.casperlabs.casper.consensus.Block.ProcessedDeploy}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed.prototype.getProcessedDeploy = function() {
  return /** @type{proto.io.casperlabs.casper.consensus.Block.ProcessedDeploy} */ (
    jspb.Message.getWrapperField(this, io_casperlabs_casper_consensus_consensus_pb.ProcessedDeploy, 2));
};


/** @param {proto.io.casperlabs.casper.consensus.Block.ProcessedDeploy|undefined} value  */
proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed.prototype.setProcessedDeploy = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed.prototype.clearProcessedDeploy = function() {
  this.setProcessedDeploy(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployProcessed.prototype.hasProcessedDeploy = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized.displayName = 'proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized.prototype.toObject = function(opt_includeInstance) {
  return proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized} msg The msg instance to transform.
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockHash: msg.getBlockHash_asB64(),
    processedDeploy: (f = msg.getProcessedDeploy()) && io_casperlabs_casper_consensus_consensus_pb.ProcessedDeploy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized;
  return proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBlockHash(value);
      break;
    case 2:
      var value = new io_casperlabs_casper_consensus_consensus_pb.ProcessedDeploy;
      reader.readMessage(value,io_casperlabs_casper_consensus_consensus_pb.ProcessedDeploy.deserializeBinaryFromReader);
      msg.setProcessedDeploy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getBlockHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = this.getProcessedDeploy();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      io_casperlabs_casper_consensus_consensus_pb.ProcessedDeploy.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized} The clone.
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized.prototype.cloneMessage = function() {
  return /** @type {!proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional bytes block_hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized.prototype.getBlockHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/**
 * optional bytes block_hash = 1;
 * This is a type-conversion wrapper around `getBlockHash()`
 * @return {string}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized.prototype.getBlockHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBlockHash()));
};


/**
 * optional bytes block_hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBlockHash()`
 * @return {!Uint8Array}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized.prototype.getBlockHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBlockHash()));
};


/** @param {!(string|Uint8Array)} value  */
proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized.prototype.setBlockHash = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional io.casperlabs.casper.consensus.Block.ProcessedDeploy processed_deploy = 2;
 * @return {proto.io.casperlabs.casper.consensus.Block.ProcessedDeploy}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized.prototype.getProcessedDeploy = function() {
  return /** @type{proto.io.casperlabs.casper.consensus.Block.ProcessedDeploy} */ (
    jspb.Message.getWrapperField(this, io_casperlabs_casper_consensus_consensus_pb.ProcessedDeploy, 2));
};


/** @param {proto.io.casperlabs.casper.consensus.Block.ProcessedDeploy|undefined} value  */
proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized.prototype.setProcessedDeploy = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized.prototype.clearProcessedDeploy = function() {
  this.setProcessedDeploy(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployFinalized.prototype.hasProcessedDeploy = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned.displayName = 'proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned.prototype.toObject = function(opt_includeInstance) {
  return proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned} msg The msg instance to transform.
 * @return {!Object}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockHash: msg.getBlockHash_asB64(),
    deployInfo: (f = msg.getDeployInfo()) && proto.io.casperlabs.casper.consensus.info.DeployInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned;
  return proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBlockHash(value);
      break;
    case 2:
      var value = new proto.io.casperlabs.casper.consensus.info.DeployInfo;
      reader.readMessage(value,proto.io.casperlabs.casper.consensus.info.DeployInfo.deserializeBinaryFromReader);
      msg.setDeployInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getBlockHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = this.getDeployInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.casperlabs.casper.consensus.info.DeployInfo.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned} The clone.
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned.prototype.cloneMessage = function() {
  return /** @type {!proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional bytes block_hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned.prototype.getBlockHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/**
 * optional bytes block_hash = 1;
 * This is a type-conversion wrapper around `getBlockHash()`
 * @return {string}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned.prototype.getBlockHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBlockHash()));
};


/**
 * optional bytes block_hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBlockHash()`
 * @return {!Uint8Array}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned.prototype.getBlockHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBlockHash()));
};


/** @param {!(string|Uint8Array)} value  */
proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned.prototype.setBlockHash = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional DeployInfo deploy_info = 2;
 * @return {proto.io.casperlabs.casper.consensus.info.DeployInfo}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned.prototype.getDeployInfo = function() {
  return /** @type{proto.io.casperlabs.casper.consensus.info.DeployInfo} */ (
    jspb.Message.getWrapperField(this, proto.io.casperlabs.casper.consensus.info.DeployInfo, 2));
};


/** @param {proto.io.casperlabs.casper.consensus.info.DeployInfo|undefined} value  */
proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned.prototype.setDeployInfo = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned.prototype.clearDeployInfo = function() {
  this.setDeployInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.io.casperlabs.casper.consensus.info.Event.DeployOrphaned.prototype.hasDeployInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.io.casperlabs.casper.consensus.info);
